"use strict";(self.webpackChunk_ethereal_engine_docs=self.webpackChunk_ethereal_engine_docs||[]).push([[80591],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var i=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,o=function(e,n){if(null==e)return{};var t,i,o={},s=Object.keys(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)t=s[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var a=i.createContext({}),u=function(e){var n=i.useContext(a),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=u(e.components);return i.createElement(a.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,o=e.mdxType,s=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(t),m=o,f=d["".concat(a,".").concat(m)]||d[m]||c[m]||s;return t?i.createElement(f,r(r({ref:n},p),{},{components:t})):i.createElement(f,r({ref:n},p))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var s=t.length,r=new Array(s);r[0]=d;var l={};for(var a in n)hasOwnProperty.call(n,a)&&(l[a]=n[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,r[1]=l;for(var u=2;u<s;u++)r[u]=t[u];return i.createElement.apply(null,r)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3303:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var i=t(87462),o=(t(67294),t(3905));const s={id:"physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",sidebar_position:0,custom_edit_url:null},r=void 0,l={unversionedId:"API/engine/modules/physics_enums_CollisionGroups",id:"API/engine/modules/physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",description:"Enumerations",source:"@site/docs/API/engine/modules/physics_enums_CollisionGroups.md",sourceDirName:"API/engine/modules",slug:"/API/engine/modules/physics_enums_CollisionGroups",permalink:"/ethereal-engine-docs/docs/API/engine/modules/physics_enums_CollisionGroups",draft:!1,editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"physics_enums_CollisionGroups",title:"Module: physics/enums/CollisionGroups",sidebar_label:"physics/enums/CollisionGroups",sidebar_position:0,custom_edit_url:null},sidebar:"tutorialSidebar",previous:{title:"physics/components/VelocityComponent",permalink:"/ethereal-engine-docs/docs/API/engine/modules/physics_components_VelocityComponent"},next:{title:"physics/functions/getInteractionGroups",permalink:"/ethereal-engine-docs/docs/API/engine/modules/physics_functions_getInteractionGroups"}},a={},u=[{value:"Enumerations",id:"enumerations",level:2},{value:"Variables",id:"variables",level:2},{value:"AvatarCollisionMask",id:"avatarcollisionmask",level:3},{value:"Defined in",id:"defined-in",level:4},{value:"DefaultCollisionMask",id:"defaultcollisionmask",level:3},{value:"Defined in",id:"defined-in-1",level:4}],p={toc:u};function c(e){let{components:n,...t}=e;return(0,o.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"enumerations"},"Enumerations"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/ethereal-engine-docs/docs/API/engine/enums/physics_enums_CollisionGroups.CollisionGroups"},"CollisionGroups"))),(0,o.kt)("h2",{id:"variables"},"Variables"),(0,o.kt)("h3",{id:"avatarcollisionmask"},"AvatarCollisionMask"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,o.kt)("strong",{parentName:"p"},"AvatarCollisionMask"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"number")),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/736f0bf/packages/engine/src/physics/enums/CollisionGroups.ts#L12"},"packages/engine/src/physics/enums/CollisionGroups.ts:12")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"defaultcollisionmask"},"DefaultCollisionMask"),(0,o.kt)("p",null,"\u2022 ",(0,o.kt)("inlineCode",{parentName:"p"},"Const")," ",(0,o.kt)("strong",{parentName:"p"},"DefaultCollisionMask"),": ",(0,o.kt)("inlineCode",{parentName:"p"},"number")),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/XRFoundation/XREngine/blob/736f0bf/packages/engine/src/physics/enums/CollisionGroups.ts#L10"},"packages/engine/src/physics/enums/CollisionGroups.ts:10")))}c.isMDXComponent=!0}}]);